def templateName = 'obiee-example'
pipeline {
  agent any
  stages {
    stage('preamble') {
        steps {
            script {
                openshift.withCluster() {
                    openshift.withProject() {
                        echo "Using project: ${openshift.project()}"
                    }
                }
            }
        }
    }
    stage('cleanup') {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withProject() {
                        openshift.selector("all", [ template : templateName ]).delete() 
                        if (openshift.selector("secrets", templateName).exists()) { 
                            openshift.selector("secrets", templateName).delete()
                        }
                    }
                }
            }
        }
    }
    stage('build') {
      steps {
        script {
            openshift.withCluster() {
                openshift.withProject() {
                  def builds = openshift.selector("bc", templateName).related('builds')
                  timeout(5) { 
                    builds.untilEach(1) {
                      return (it.object().status.phase == "Complete")
                    }
                  }
                }
            }
        }
      }
    }
    stage('deploy') {
      steps {
        script {
            openshift.withCluster() {
                openshift.withProject() {
                  def rm = openshift.selector("dc", templateName).rollout().latest()
                  timeout(5) { 
                    openshift.selector("dc", templateName).related('pods').untilEach(1) {
                      return (it.object().status.phase == "Running")
                    }
                  }
                }
            }
        }
      }
    }
    /* Testing pipeline */
    stage('promote_to_dev') {
      steps {
        script {
            git([url: "https://github.com/bcgov/EDUC-UMU", branch: 'dev'])
            sh 'git config --global user.email "nathan.denny@gov.bc.ca"'
            sh 'git config --global user.name "ndenny1"'
            sh 'git fetch --all'
            sh 'git checkout dev'
            sh 'git merge upstream/tools'
            sh 'git commit -am "Merged tools branch to dev branch"'
            sh "git push origin master"
        }
      }
    }
  }
}